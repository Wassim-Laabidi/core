# Automatically generated by hassfest.
#
# To update, run python3 -m script.hassfest -p docker

ARG BUILD_FROM
FROM ${BUILD_FROM}

# Synchronize with homeassistant/core.py:async_stop
ENV \
    S6_SERVICES_GRACETIME=240000 \
    UV_SYSTEM_PYTHON=true

ARG QEMU_CPU

# Install uv
RUN pip3 install uv==0.2.27

# Install Node.js and Yarn using nvm in a single RUN command
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash && \
    export NVM_DIR="$HOME/.nvm" && \
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && \
    nvm install 20.17.0 && \
    nvm use 20.17.0 && \
    npm install -g yarn && \
    yarn --version
    

WORKDIR /usr/src

# Install build dependencies
RUN apt-get update && \
    apt-get install -y build-essential python3-dev

# Setup Home Assistant Core dependencies
COPY requirements.txt homeassistant/
# Commenting out the next line if the file doesn't exist
COPY homeassistant/package_constraints.txt homeassistant/homeassistant/
RUN \
    uv pip install \
        -r homeassistant/requirements.txt

# Set up frontend
COPY frontend /workspaces/frontend
WORKDIR /workspaces/frontend

RUN bash -c "source ~/.nvm/nvm.sh && \
    nvm install 20.17.0 && \
    nvm use 20.17.0 && \
    yarn install && \
    /workspaces/frontend/script/bootstrap && /workspaces/frontend/script/setup_translations && /workspaces/frontend/script/build_frontend"

# Continue with core setup
WORKDIR /usr/src
COPY . homeassistant/
RUN \
    uv pip install \
        -e ./homeassistant \
    && python3 -m compileall \
        homeassistant/homeassistant

# Install additional Python packages
RUN pip3 install mysqlclient numpy

# Home Assistant S6-Overlay
COPY rootfs /

WORKDIR /config

CMD ["/usr/local/bin/python", "-m", "homeassistant", "--config", "/config"]